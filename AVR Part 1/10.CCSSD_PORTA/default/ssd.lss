
ssd.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000014e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000002  00800060  00800060  000001c2  2**0
                  ALLOC
  2 .debug_aranges 00000020  00000000  00000000  000001c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 00000021  00000000  00000000  000001e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000003ba  00000000  00000000  00000203  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000000fb  00000000  00000000  000005bd  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000002ec  00000000  00000000  000006b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000020  00000000  00000000  000009a4  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000000da  00000000  00000000  000009c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000200  00000000  00000000  00000a9e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000048  00000000  00000000  00000c9e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a2 36       	cpi	r26, 0x62	; 98
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 3e 00 	call	0x7c	; 0x7c <main>
  74:	0c 94 a5 00 	jmp	0x14a	; 0x14a <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <main>:
#define F_CPU 8000000UL
#include<avr/io.h>
#include<util/delay.h>
int i;
int main()
{
  7c:	df 92       	push	r13
  7e:	ef 92       	push	r14
  80:	ff 92       	push	r15
  82:	0f 93       	push	r16
  84:	1f 93       	push	r17
  while(1)
  {
  	DDRA= 0b11111111;
  86:	dd 24       	eor	r13, r13
  88:	da 94       	dec	r13
  	PORTA=0x3f;
  8a:	9f e3       	ldi	r25, 0x3F	; 63
  8c:	e9 2e       	mov	r14, r25
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  8e:	28 ec       	ldi	r18, 0xC8	; 200
  90:	30 e0       	ldi	r19, 0x00	; 0
 	 _delay_ms(300);
  	PORTA=0x06;
  92:	86 e0       	ldi	r24, 0x06	; 6
  94:	f8 2e       	mov	r15, r24
 	 _delay_ms(300);
  	PORTA=0x5b;
  96:	0b e5       	ldi	r16, 0x5B	; 91
  	_delay_ms(300);
  	PORTA=0x4f;
  98:	1f e4       	ldi	r17, 0x4F	; 79
  	_delay_ms(300);
  	PORTA=0x66;
  9a:	b6 e6       	ldi	r27, 0x66	; 102
  	_delay_ms(300);
  	PORTA=0x6d;
  9c:	ad e6       	ldi	r26, 0x6D	; 109
  	_delay_ms(300);
  	PORTA=0x7d;
  9e:	7d e7       	ldi	r23, 0x7D	; 125
  	_delay_ms(300);
  	PORTA=0x07;
  a0:	67 e0       	ldi	r22, 0x07	; 7
  	_delay_ms(300);
  	PORTA=0x7f;
  a2:	5f e7       	ldi	r21, 0x7F	; 127
  	_delay_ms(300);
  	PORTA=0x6f;
  a4:	4f e6       	ldi	r20, 0x6F	; 111
int i;
int main()
{
  while(1)
  {
  	DDRA= 0b11111111;
  a6:	da ba       	out	0x1a, r13	; 26
  	PORTA=0x3f;
  a8:	eb ba       	out	0x1b, r14	; 27
  aa:	88 eb       	ldi	r24, 0xB8	; 184
  ac:	9b e0       	ldi	r25, 0x0B	; 11
  ae:	f9 01       	movw	r30, r18
  b0:	31 97       	sbiw	r30, 0x01	; 1
  b2:	f1 f7       	brne	.-4      	; 0xb0 <main+0x34>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  b4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  b6:	d9 f7       	brne	.-10     	; 0xae <main+0x32>
 	 _delay_ms(300);
  	PORTA=0x06;
  b8:	fb ba       	out	0x1b, r15	; 27
  ba:	88 eb       	ldi	r24, 0xB8	; 184
  bc:	9b e0       	ldi	r25, 0x0B	; 11
  be:	f9 01       	movw	r30, r18
  c0:	31 97       	sbiw	r30, 0x01	; 1
  c2:	f1 f7       	brne	.-4      	; 0xc0 <main+0x44>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  c4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  c6:	d9 f7       	brne	.-10     	; 0xbe <main+0x42>
 	 _delay_ms(300);
  	PORTA=0x5b;
  c8:	0b bb       	out	0x1b, r16	; 27
  ca:	88 eb       	ldi	r24, 0xB8	; 184
  cc:	9b e0       	ldi	r25, 0x0B	; 11
  ce:	f9 01       	movw	r30, r18
  d0:	31 97       	sbiw	r30, 0x01	; 1
  d2:	f1 f7       	brne	.-4      	; 0xd0 <main+0x54>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  d4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  d6:	d9 f7       	brne	.-10     	; 0xce <main+0x52>
  	_delay_ms(300);
  	PORTA=0x4f;
  d8:	1b bb       	out	0x1b, r17	; 27
  da:	88 eb       	ldi	r24, 0xB8	; 184
  dc:	9b e0       	ldi	r25, 0x0B	; 11
  de:	f9 01       	movw	r30, r18
  e0:	31 97       	sbiw	r30, 0x01	; 1
  e2:	f1 f7       	brne	.-4      	; 0xe0 <main+0x64>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  e4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  e6:	d9 f7       	brne	.-10     	; 0xde <main+0x62>
  	_delay_ms(300);
  	PORTA=0x66;
  e8:	bb bb       	out	0x1b, r27	; 27
  ea:	88 eb       	ldi	r24, 0xB8	; 184
  ec:	9b e0       	ldi	r25, 0x0B	; 11
  ee:	f9 01       	movw	r30, r18
  f0:	31 97       	sbiw	r30, 0x01	; 1
  f2:	f1 f7       	brne	.-4      	; 0xf0 <main+0x74>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  f4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  f6:	d9 f7       	brne	.-10     	; 0xee <main+0x72>
  	_delay_ms(300);
  	PORTA=0x6d;
  f8:	ab bb       	out	0x1b, r26	; 27
  fa:	88 eb       	ldi	r24, 0xB8	; 184
  fc:	9b e0       	ldi	r25, 0x0B	; 11
  fe:	f9 01       	movw	r30, r18
 100:	31 97       	sbiw	r30, 0x01	; 1
 102:	f1 f7       	brne	.-4      	; 0x100 <main+0x84>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 104:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 106:	d9 f7       	brne	.-10     	; 0xfe <main+0x82>
  	_delay_ms(300);
  	PORTA=0x7d;
 108:	7b bb       	out	0x1b, r23	; 27
 10a:	88 eb       	ldi	r24, 0xB8	; 184
 10c:	9b e0       	ldi	r25, 0x0B	; 11
 10e:	f9 01       	movw	r30, r18
 110:	31 97       	sbiw	r30, 0x01	; 1
 112:	f1 f7       	brne	.-4      	; 0x110 <main+0x94>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 114:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 116:	d9 f7       	brne	.-10     	; 0x10e <main+0x92>
  	_delay_ms(300);
  	PORTA=0x07;
 118:	6b bb       	out	0x1b, r22	; 27
 11a:	88 eb       	ldi	r24, 0xB8	; 184
 11c:	9b e0       	ldi	r25, 0x0B	; 11
 11e:	f9 01       	movw	r30, r18
 120:	31 97       	sbiw	r30, 0x01	; 1
 122:	f1 f7       	brne	.-4      	; 0x120 <main+0xa4>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 124:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 126:	d9 f7       	brne	.-10     	; 0x11e <main+0xa2>
  	_delay_ms(300);
  	PORTA=0x7f;
 128:	5b bb       	out	0x1b, r21	; 27
 12a:	88 eb       	ldi	r24, 0xB8	; 184
 12c:	9b e0       	ldi	r25, 0x0B	; 11
 12e:	f9 01       	movw	r30, r18
 130:	31 97       	sbiw	r30, 0x01	; 1
 132:	f1 f7       	brne	.-4      	; 0x130 <main+0xb4>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 134:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 136:	d9 f7       	brne	.-10     	; 0x12e <main+0xb2>
  	_delay_ms(300);
  	PORTA=0x6f;
 138:	4b bb       	out	0x1b, r20	; 27
 13a:	88 eb       	ldi	r24, 0xB8	; 184
 13c:	9b e0       	ldi	r25, 0x0B	; 11
 13e:	f9 01       	movw	r30, r18
 140:	31 97       	sbiw	r30, 0x01	; 1
 142:	f1 f7       	brne	.-4      	; 0x140 <main+0xc4>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 144:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 146:	d9 f7       	brne	.-10     	; 0x13e <main+0xc2>
 148:	ae cf       	rjmp	.-164    	; 0xa6 <main+0x2a>

0000014a <_exit>:
 14a:	f8 94       	cli

0000014c <__stop_program>:
 14c:	ff cf       	rjmp	.-2      	; 0x14c <__stop_program>
